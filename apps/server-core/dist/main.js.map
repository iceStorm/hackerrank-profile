{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///external commonjs \"@nestjs/common\"","webpack:///external commonjs \"@nestjs/core\"","webpack:///external commonjs \"tslib\"","webpack:///external commonjs \"express\"","webpack:///external commonjs \"axios\"","webpack:///../../libs/hackerrank-api/src/httpClient.ts","webpack:///../../libs/hackerrank-api/src/index.ts","webpack:///external commonjs \"date-fns\"","webpack:///external commonjs \"adm-zip\"","webpack:///external commonjs \"jimp\"","webpack:///external node-commonjs \"path\"","webpack:///external commonjs \"jsdom\"","webpack:///external commonjs \"tough-cookie\"","webpack:///external commonjs \"axios-cookiejar-support\"","webpack:///./src/services/hackerrank.service.ts","webpack:///./src/app/app.service.ts","webpack:///./src/app/app.controller.ts","webpack:///./src/app/app.module.ts","webpack:///./src/main.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@nestjs/common\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@nestjs/core\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"tslib\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"express\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"axios\");","import axios, { CreateAxiosDefaults } from \"axios\"\n\nexport function getHttpClient(config?: CreateAxiosDefaults) {\n  return axios.create({\n    ...config,\n    headers: {\n      \"User-Agent\":\n        \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36\",\n    },\n  })\n}\n","import { Cert, Profile } from \"@hackerrank-profile/shared/models\"\n\nimport { getHttpClient } from \"./httpClient\"\n\nconst httpClient = getHttpClient()\n\nexport async function getCerts(username: string) {\n  const response = await httpClient.get<{ data: Cert[] }>(\n    `https://www.hackerrank.com/community/v1/test_results/hacker_certificate?username=${username}`,\n  )\n\n  return response.data.data\n}\n\nexport async function getProfile(username: string) {\n  const { data } = await httpClient.get<{ model: Profile }>(\n    `https://www.hackerrank.com/rest/contests/master/hackers/${username}/profile`,\n  )\n\n  return data\n}\n\nexport async function getCertImage(certImageUrl: string) {\n  const { data: imageBuffer } = await httpClient.get<ArrayBuffer>(certImageUrl, {\n    responseType: \"arraybuffer\",\n  })\n\n  return Buffer.from(imageBuffer)\n}\n\nexport function getCertBackgroundName(cert: Cert) {\n  const certName = cert.attributes.certificates[0].split(/\\(Basic|\\(Intermediate|\\(Advanced/)[0].split(\"()\")[0]\n\n  const words = certName.split(\" \").filter(Boolean)\n  const transformedWords = new Array<string>()\n\n  for (let index = 0; index < words.length; index++) {\n    const word = words[index]\n\n    switch (word) {\n      case \"C#\":\n        transformedWords.push(\"C%23\")\n        break\n\n      case \"Node\":\n      case \"Node.js\":\n        transformedWords.push(\"Nodejs\")\n        break\n\n      case \"Rest\":\n        transformedWords.push(\"Rest_\")\n        break\n\n      case \"(React)\":\n        transformedWords.push(\"React\")\n        break\n\n      case \"Engineer\":\n        transformedWords.push(words[index + 1] === \"Intern\" ? \"Engineering\" : word)\n        break\n\n      default:\n        transformedWords.push(word)\n    }\n  }\n\n  return transformedWords.join(\"\")\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"date-fns\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"adm-zip\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"jimp\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"path\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"jsdom\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"tough-cookie\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"axios-cookiejar-support\");","import { resolve } from \"path\"\n\nimport Jimp from \"jimp\"\nimport { format } from \"date-fns\"\nimport { AxiosInstance } from \"axios\"\n\nimport { JSDOM } from \"jsdom\"\nimport { CookieJar } from \"tough-cookie\"\nimport { wrapper } from \"axios-cookiejar-support\"\n\nimport { Cert, LoginResoonse } from \"@hackerrank-profile/shared/models\"\nimport { getHttpClient } from \"@hackerrank-profile/hackerrank-api/httpClient\"\n\nexport async function generateCertificateImage(cert: Cert, quality: number, outputType: \"buffer\"): Promise<Buffer>\nexport async function generateCertificateImage(cert: Cert, quality: number, outputType: \"base64\"): Promise<string>\nexport async function generateCertificateImage(cert: Cert, quality: number, outputType: \"buffer\" | \"base64\") {\n  if (quality < 0 || quality > 100) {\n    throw new Error(\"Quality must not below 0 or higher 100\")\n  }\n\n  const image = await Jimp.read(resolve(__dirname, \"./assets/hackerrank-certificate-template.jpeg\"))\n\n  const width = image.getWidth()\n  const height = image.getHeight()\n\n  // draw cert id\n  const font24 = await Jimp.loadFont(resolve(__dirname, \"./assets/fonts/24/Xg7G3MkFJNkPqw2ZAxj9kpQR.ttf.fnt\"))\n  const certId = cert.id.toUpperCase()\n  const certIdWidth = Jimp.measureText(font24, certId)\n  image.print(font24, width - certIdWidth - 190, 130, certId)\n\n  // draw cert author\n  const font72 = await Jimp.loadFont(resolve(__dirname, \"./assets/fonts/72/o9OVcyamnJWarYlhYa1XZrQA.ttf.fnt\"))\n  const certAuthor = cert.attributes.hacker_name\n  const certAuthorWidth = Jimp.measureText(font72, certAuthor)\n  const certAuthorHeight = Jimp.measureTextHeight(font72, certAuthor, certAuthorWidth)\n  image.print(font72, (width - certAuthorWidth) / 2, height / 2 - (certAuthorHeight - 10), certAuthor)\n\n  // draw cert name\n  const font36 = await Jimp.loadFont(resolve(__dirname, \"./assets/fonts/36/LLPUZQ3YlfSY8mSDNPgkr2b6.ttf.fnt\"))\n  const certName = cert.attributes.certificates[0].split(\" ()\")[0]\n  const certNameWidth = Jimp.measureText(font36, certName)\n  image.print(font36, (width - certNameWidth) / 2, height / 2 + 100, certName)\n\n  // draw cert received date\n  const font32 = await Jimp.loadFont(resolve(__dirname, \"./assets/fonts/32/gtFiT41B72GlabIz8JNnyH5R.ttf.fnt\"))\n  const certDate = format(new Date(cert.attributes.completed_at), \"dd MMM yyyy\")\n  const certDateWidth = Jimp.measureText(font32, certDate)\n  const certDateHeight = Jimp.measureTextHeight(font32, certDate, certDateWidth)\n  image.print(font32, 592 - certDateWidth, height - certDateHeight - 225, certDate)\n\n  const compressedImage = image.quality(quality)\n\n  if (outputType === \"buffer\") {\n    return compressedImage.getBufferAsync(Jimp.MIME_JPEG)\n  }\n\n  return compressedImage.getBase64Async(Jimp.MIME_JPEG)\n}\n\nasync function getInitialCsrfToken(axiosClient: AxiosInstance) {\n  const { data } = await axiosClient.get(\"https://hackerrank.com/dashboard\")\n\n  const page = new JSDOM(data)\n  const metaTag = page.window.document.querySelector('meta[id=\"csrf-token\"]')\n\n  return metaTag?.getAttribute(\"content\")\n}\n\nexport async function login(usernameOrEmail: string, password: string) {\n  const jar = new CookieJar()\n  const client = wrapper(getHttpClient({ jar }))\n\n  // to get hackerrank hidden tokens and session id\n  const initialCsrfToken = await getInitialCsrfToken(client)\n\n  const loginResponse = await client.post<LoginResoonse>(\n    \"https://www.hackerrank.com/rest/auth/login\",\n    { login: usernameOrEmail, password },\n    {\n      headers: { \"X-Csrf-Token\": initialCsrfToken },\n    },\n  )\n\n  let username: string | undefined\n\n  // only fetch profile when logged in successfully\n  if (loginResponse.data.status === true) {\n    const { data: profileData } = await client.get(\"https://www.hackerrank.com/prefetch_data\")\n    username = profileData.profile.username\n    console.log(\"username:\", username)\n  }\n\n  // if login failed, get certs by username\n  const certsResponse = await client.get<{ data: Cert[] }>(\n    `https://www.hackerrank.com/community/v1/test_results/hacker_certificate?username=${username ?? login}`,\n  )\n\n  const passedCertNames = certsResponse.data.data\n    .filter(cert => cert.attributes.status === \"test_passed\")\n    .map(cert => cert.attributes.certificates[0])\n\n  const failedCertNames = certsResponse.data.data\n    .filter(cert => cert.attributes.status === \"test_failed\")\n    .map(cert => cert.attributes.certificates[0])\n\n  const responseObject = Object.assign(loginResponse.data, {\n    username,\n    passedCertNames,\n    failedCertNames,\n    certs: certsResponse.data.data,\n  })\n\n  return responseObject\n}\n","import { Injectable, NotFoundException } from \"@nestjs/common\"\n\nimport { Request, Response } from \"express\"\nimport { format } from \"date-fns\"\nimport AdmZip from \"adm-zip\"\nimport Jimp from \"jimp\"\n\nimport { getCerts } from \"@hackerrank-profile/hackerrank-api\"\n\nimport { generateCertificateImage } from \"../services/hackerrank.service\"\n\n@Injectable()\nexport class AppService {\n  getData(): { message: string } {\n    return { message: \"Hello API\" }\n  }\n\n  async getUserSingleCertificate(username: string, certId: string) {\n    const userAllCerts = await getCerts(username)\n\n    const theCert = userAllCerts.find(cert => cert.id === certId)\n\n    if (!theCert) {\n      throw new NotFoundException(``)\n    }\n\n    return theCert\n  }\n\n  async generateAndDownloadCertificates(username: string, req: Request, res: Response, certId?: string) {\n    const quality = parseInt((req.query[\"quality\"] as string) ?? \"10\", 10)\n\n    const allCerts = await getCerts(username)\n    const passedCerts = allCerts.filter(cert => cert.attributes.status === \"test_passed\")\n\n    // no certificates available\n    if (!passedCerts.length) {\n      return Response.json({\n        username,\n        message:\n          \"There is no data to download. You have typed the wrong HackerRank username, or your account does not contain any certificates.\",\n        profile: `https://www.hackerrank.com/profile/${username}`,\n      })\n    }\n\n    // handle single cert downloading\n    if (certId) {\n      const foundCert = passedCerts.find(cert => cert.id === certId)\n\n      if (!foundCert) {\n        throw new Error(`No certificate with id ${certId} available for user ${username}`)\n      }\n\n      res.header({\n        \"Content-Type\": Jimp.MIME_JPEG,\n        \"Content-Disposition\": `attachment; filename=\"${username}_hackerrank_certificate__${foundCert.attributes.certificates[0].replace(\n          \" ()\",\n          \"\",\n        )}.jpg\"`,\n      })\n\n      return res.end(await generateCertificateImage(foundCert, quality, \"buffer\"))\n    }\n\n    const zipper = new AdmZip()\n\n    // map all certificates image to buffer array\n    await Promise.all(\n      passedCerts.map(cert =>\n        generateCertificateImage(cert, quality, \"buffer\").then(imageBuffer => {\n          zipper.addFile(`${cert.id}__${cert.attributes.certificates[0].replace(\" ()\", \"\")}.jpg`, imageBuffer)\n        }),\n      ),\n    )\n\n    res.header({\n      \"Content-Type\": \"application/zip\",\n      \"Content-Disposition\": `attachment; filename=\"${username}_hackerrank_certificates__${format(\n        new Date(),\n        \"dd.MM.yyyy\",\n      )}.zip\"`,\n    })\n\n    res.end(zipper.toBuffer())\n  }\n}\n","import { Body, Controller, Get, Param, Post, Req, Res } from \"@nestjs/common\"\nimport { Response, Request } from \"express\"\n\nimport { getCerts, getProfile } from \"@hackerrank-profile/hackerrank-api\"\n\nimport { AppService } from \"./app.service\"\nimport { login } from \"../services/hackerrank.service\"\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getData() {\n    return this.appService.getData()\n  }\n\n  @Post(\"login\")\n  login(@Body() payload: { username: string; password: string }) {\n    return login(payload.username, payload.password)\n  }\n\n  @Get(\":username\")\n  getUserProfile(@Param(\"username\") username: string) {\n    return getProfile(username)\n  }\n\n  @Get(\":username/certificates\")\n  getUserAllCertificate(@Param(\"username\") username: string) {\n    return getCerts(username)\n  }\n\n  @Get(\":username/certificates/:cert_id?/download\")\n  downloadUserSingleCertificate(\n    @Req() req: Request,\n    @Res() res: Response,\n    @Param(\"username\") username: string,\n    @Param(\"cert_id\") certId?: string,\n  ) {\n    return this.appService.generateAndDownloadCertificates(username, req, res, certId)\n  }\n\n  @Get(\":username/certificates/:cert_id\")\n  getUserSingleCertificate(@Param(\"username\") username: string, @Param(\"cert_id\") certId: string) {\n    return this.appService.getUserSingleCertificate(username, certId)\n  }\n}\n","import { Module } from '@nestjs/common';\n\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\n\n@Module({\n  imports: [],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n","/**\n * This is not a production server yet!\n * This is only a minimal backend to get started.\n */\n\nimport { Logger } from \"@nestjs/common\"\nimport { NestFactory } from \"@nestjs/core\"\n\nimport { AppModule } from \"./app/app.module\"\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule, { cors: true })\n\n  const port = process.env.PORT ?? 3000\n  await app.listen(port)\n\n  Logger.log(`🚀 Application is running on: http://localhost:${port}`)\n}\n\nbootstrap()\n"],"names":[],"sourceRoot":""}